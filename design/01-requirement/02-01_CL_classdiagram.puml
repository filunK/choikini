@startuml

    
    package commons <<Frame>> {
        class ユーティリティ {

        }

        class Logger as "ロガー" {
            +{static} void 情報ログ出力()
            +{static} void 警告ログ出力()
            +{static} void 異常ログ出力()
            
        }
        
    }
    
    
    class Application as "エントリポイント" {
        +void run()
        -void configure(Express.Application app)
        -void route(Express.Application app)
    }

    package routing <<Frame>> {

        Application - IRoute
        interface Express.IRoute as "URIルータ" {
        }

        IRoute <|.. RouteBase
        abstract class RouteBase as "基礎ルータ" {
            #{abstract}Path: string
            +void ルート登録()
            #{abstract}void get(req:Request, res:Responce, next:NextAction)
            #{abstract}void post(req:Request, res:Responce, next:NextAction)
            #{abstract}void put(req:Request, res:Responce, next:NextAction)
            #{abstract}void delete(req:Request, res:Responce, next:NextAction)
        }

        RouteBase <|-- Index
        class Index as "/" {
        }

        RouteBase <|-- Login
        class Login as "/login" {
        }

        RouteBase <|-- Logoff
        class Logoff as "/logoff" {
        }

        RouteBase <|-- Choikini
        class Choikini as "/choikini" {
        }
        
        RouteBase <|-- ChoikiniAll
        class ChoikiniAll as "/choikini-all" {
        }

    }
    
    
    package actions <<Frame>> {
        interface IActionable as "処理" {
            +json 処理()
        }

        IActionable <|.. ActionBase
        abstract class ActionBase as "処理ベース" {
            +json 処理()
            #boolean 認証検証()
            #{abstract} 事前処理()
            #{abstract} 本処理()
            #{abstract} 事後処理()
        }
        
        ActionBase <|-- LoginAction
        class LoginAction as "ログイン" {
        }
        
        ActionBase <|-- LogoffAction
        class LogoffAction as "ログオフ" {
        }

        ActionBase <|-- RegistAction
        class RegistAction as "登録" {
        }

        ActionBase <|-- SelectAction
        class SelectAction as "取得" {
        }

        ActionBase <|-- SelectAllAction
        class SelectAllAction as "全ちょい気に取得" {
        }

    }
    
    
    
    package database <<Frame>> {

        ActionBase - Dao
        LoginAction - Dao
        LogoffAction - Dao
        RegistAction - Dao
        SelectAction - Dao
        SelectAllAction - Dao
        interface Dao as "DAO" {
            +ユーザ情報取得()
            +ユーザトークン更新()
            +ログイン処理()
            +ログオフ処理()
            +ちょい気に登録()
            +ちょい気に取得()
            
        }

        Dao <|.. MongoDao
        class MongoDao {
        }

    }
    
    
    package objectModels <<Frame>> {
        enum userAuthType as "ユーザ権限" {
            USUAL = 0
            ADMINISTRATOR = 10
        }
    
        class User as "ユーザ" {
            +ユーザ名:string
            +パスワード:string
            +ユーザトークン:string
            +ユーザ権限:ユーザ情報
            +ちょい気に:List
        }
 
    }



@enduml
